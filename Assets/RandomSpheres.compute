#pragma kernel CSMain

struct Sphere {
    float3 position;
    float radius;
    float3 albedo;
    float3 specular;
};

RWStructuredBuffer<float> _SphereBuffer;

uint rng_state;

//Hash invented by Thomas Wang
uint wang_hash(uint seed) {
    seed = (seed ^ 61) ^ (seed >> 16);
    seed *= 9;
    seed = seed ^ (seed >> 4);
    seed *= 0x27d4eb2d;
    seed = seed ^ (seed >> 15);

    return seed;
}

//Xorshift algorithm from George Marsaglia's paper
uint rand_xorshift() {
    rng_state ^= (rng_state << 13);
    rng_state ^= (rng_state >> 17);
    rng_state ^= (rng_state << 5);
    
    return rng_state;
}

[numthreads(24,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID) {
    Sphere sphere;
    rng_state = wang_hash(id.x);



    _SphereBuffer[id.x] = float(rand_xorshift()) * (1.0f / 4294967296.0f);
}
